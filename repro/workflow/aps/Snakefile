from os.path import join as j


configfile: "../config.yaml"


#
# Directories

DATA_DIR = j(config["data_dir"])
APS_DATA_DIR = j(config["aps_data_dir"])
SUPP_DATA_DIR = j(config["supp_data_dir"])

# ================
# Source
# ================
# Source
APS_CITATION = j(APS_DATA_DIR, "aps-dataset-citations-2019.csv")
APS_PAPER_METADATA_DIR = j(APS_DATA_DIR,"aps-dataset-metadata-2019")
APS_CATEGORY_NAME_FILE = j(SUPP_DATA_DIR, "aps-category-name.csv")

# ================
# Preprocessed
# ================

APS_PREP_DATA_DIR = j(DATA_DIR, "aps", "preprocessed")
APS_PAPER_TABLE = j(APS_PREP_DATA_DIR, "paper_table.csv")
APS_CITATION_NET = j(APS_PREP_DATA_DIR, "citation_net.npz")
APS_AUTHOR_PAPER_NET = j(APS_PREP_DATA_DIR, "paper_author_net.npz")
APS_CATEGORY_TABLE  = j(APS_PREP_DATA_DIR, "category_table.csv")
APS_PAPER_CATEGORY_TABLE  = j(APS_PREP_DATA_DIR, "paper_category_table.csv")

# Supplementary
APS_METADATA_TABLE = j(APS_PREP_DATA_DIR, "supp", "paper-metadata-table.csv")

rule all:
    input:
        APS_PAPER_TABLE,
        APS_CITATION_NET,
        APS_CATEGORY_TABLE,
        APS_PAPER_CATEGORY_TABLE


rule construct_aps_paper_citation_net:
    input:
        citation_file=APS_CITATION,
        paper_metadata_file=APS_METADATA_TABLE,
    output:
        output_net_file=APS_CITATION_NET,
        output_node_file=APS_PAPER_TABLE,
    script:
        "workflow/construct-aps-citation-net.py"


rule make_aps_paper_metadata_table:
    input:
        APS_PAPER_METADATA_DIR,
    output:
        APS_METADATA_TABLE,
    shell:
        "python3 workflow/make-aps-paper-metadata-table.py {input} {output}"



rule make_paper_category_table:
    input:
        data_file = APS_PAPER_TABLE,
        category_name_table_file = APS_CATEGORY_NAME_FILE,
    output:
        output_category_table_file = APS_CATEGORY_TABLE,
        output_paper_category_table_file = APS_PAPER_CATEGORY_TABLE
    script:
        "workflow/make_paper_category_table.py"